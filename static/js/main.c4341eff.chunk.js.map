{"version":3,"sources":["MainPlayer.tsx","App.tsx","index.tsx"],"names":["VideoWrapper","styled","div","CaptionWrapper","CaptionOverlay","MainPlayer","url","segments","captions","useQueryParam","BooleanParam","isDebugMode","useState","duration","setDuration","playing","setPlaying","currentTime","setCurrentTime","currentClipIndex","setCurrentClipIndex","playerRef","useRef","ref","controls","width","height","style","position","top","right","bottom","left","progressInterval","onReady","current","seekTo","start","onDuration","onProgress","playedSeconds","end","length","console","log","filter","caption","text","map","index","className","Card","Body","Title","ButtonGroup","Button","onClick","Math","max","min","toFixed","segment","Text","StyledContainer","Container","App","StringParam","gistId","clip","setClip","useEffect","fetch","headers","accept","then","response","a","json","data","files","Object","values","JSON","parse","content","catch","error","Navbar","bg","variant","fixed","Brand","Row","Col","lg","author","authorLink","href","target","rel","rootElement","document","getElementById","ReactDOM","render","ReactRouterRoute","Route"],"mappings":"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","file":"static/js/main.c4341eff.chunk.js","sourcesContent":["import { FC, useRef, useState } from 'react'\nimport { Button, ButtonGroup, Card } from 'react-bootstrap'\nimport ReactPlayer from 'react-player'\nimport styled from 'styled-components'\nimport { BooleanParam, useQueryParam } from 'use-query-params'\nimport { CaptionProps, SegmentProps } from './types'\n\nconst VideoWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  padding-top: calc(900% / 16);\n  overflow: hidden;\n  background: var(--oc-gray-8);\n`\nconst CaptionWrapper = styled.div`\n  z-index: 1000;\n  position: absolute;\n  right: 1rem;\n  bottom: 10%;\n  left: 1rem;\n  color: var(--oc-gray-0);\n  text-align: center;\n  font-size: 1.5rem;\n`\nconst CaptionOverlay = styled.div`\n  display: inline-block;\n  padding: 0.25rem 0.5rem;\n  background: rgba(52, 58, 64, 0.6);\n`\n\nconst MainPlayer: FC<{\n  url: string\n  segments?: SegmentProps[]\n  captions?: CaptionProps[]\n}> = ({ url, segments, captions }) => {\n  const [isDebugMode] = useQueryParam('debug', BooleanParam)\n  const [duration, setDuration] = useState(0)\n  const [playing, setPlaying] = useState(false)\n  const [currentTime, setCurrentTime] = useState(0)\n  const [currentClipIndex, setCurrentClipIndex] = useState(-1)\n  const playerRef = useRef<ReactPlayer | null>(null)\n\n  return (\n    <>\n      <VideoWrapper>\n        <ReactPlayer\n          ref={playerRef}\n          url={url}\n          controls={true}\n          width=\"100%\"\n          height=\"100%\"\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n          }}\n          progressInterval={100}\n          playing={playing}\n          onReady={() => {\n            if (!segments) {\n              return\n            }\n            setCurrentClipIndex(0)\n            playerRef.current?.seekTo(segments[0].start)\n            setPlaying(true)\n          }}\n          onDuration={duration => {\n            setDuration(duration)\n          }}\n          onProgress={({ playedSeconds }) => {\n            setCurrentTime(playedSeconds)\n            if (!segments || currentClipIndex === -1) {\n              return\n            }\n            if (playedSeconds > segments[currentClipIndex].end) {\n              if (currentClipIndex === segments.length - 1) {\n                console.log('qq')\n                setPlaying(false)\n                return\n              }\n              setCurrentClipIndex(currentClipIndex + 1)\n              if (playedSeconds < segments[currentClipIndex + 1].start) {\n                playerRef.current?.seekTo(segments[currentClipIndex + 1].start)\n              }\n            }\n          }}\n        />\n\n        <CaptionWrapper>\n          {captions\n            ?.filter(caption => caption.start < currentTime && caption.end > currentTime && caption.text)\n            .map((caption, index) => (\n              <div key={index}>\n                <CaptionOverlay>{caption.text}</CaptionOverlay>\n              </div>\n            ))}\n        </CaptionWrapper>\n      </VideoWrapper>\n\n      {(process.env.NODE_ENV === 'development' || isDebugMode) && (\n        <div className=\"mt-5\">\n          <Card>\n            <Card.Body>\n              <Card.Title>Debug</Card.Title>\n              <ButtonGroup aria-label=\"Basic example\">\n                <Button onClick={() => playerRef.current?.seekTo(Math.max(0, currentTime - 1))}>\n                  <i className=\"fas fa-backward\" />\n                </Button>\n                <Button onClick={() => setPlaying(!playing)}>\n                  {playing ? <i className=\"fas fa-pause\" /> : <i className=\"fas fa-play\" />}\n                </Button>\n                <Button onClick={() => playerRef.current?.seekTo(Math.min(duration, currentTime + 1))}>\n                  <i className=\"fas fa-forward\" />\n                </Button>\n              </ButtonGroup>\n              <div className=\"fs-2\">{currentTime.toFixed(2)}s</div>\n              <Card.Title>Segments</Card.Title>\n              {segments?.map((segment, index) => (\n                <div key={index}>\n                  <span\n                    className=\"text-primary cursor-pointer\"\n                    onClick={() => playerRef.current?.seekTo(segment.start)}\n                  >\n                    {segment.start.toFixed(2)}\n                  </span>\n                  <span> ~ </span>\n                  <span className=\"text-primary cursor-pointer\" onClick={() => playerRef.current?.seekTo(segment.end)}>\n                    {segment.end.toFixed(2)}\n                  </span>\n                </div>\n              ))}\n              <Card.Title>Captions</Card.Title>\n              <Card.Text>\n                {captions?.map((caption, index) => (\n                  <div key={index}>\n                    <span\n                      className=\"text-primary cursor-pointer\"\n                      onClick={() => playerRef.current?.seekTo(caption.start)}\n                    >\n                      {caption.start.toFixed(2)}\n                    </span>\n                    <span> ~ </span>\n                    <span\n                      className=\"text-primary cursor-pointer\"\n                      onClick={() => playerRef.current?.seekTo(caption.end)}\n                    >\n                      {caption.end.toFixed(2)}\n                    </span>\n                    <span className=\"d-inline-block ms-4\">{caption.text}</span>\n                  </div>\n                ))}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default MainPlayer\n","import { FC, useEffect, useState } from 'react'\nimport { Card, Col, Container, Navbar, Row } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { StringParam, useQueryParam } from 'use-query-params'\nimport MainPlayer from './MainPlayer'\nimport { ClipProps } from './types'\n\nconst StyledContainer = styled(Container)`\n  max-width: 100%;\n`\n\nconst App: FC = () => {\n  const [gistId] = useQueryParam('gistId', StringParam)\n\n  const [clip, setClip] = useState<ClipProps | null>(null)\n\n  useEffect(() => {\n    setClip(null)\n\n    if (!gistId) {\n      return\n    }\n\n    fetch(`https://api.github.com/gists/${gistId}`, {\n      headers: {\n        accept: 'application/vnd.github.v3+json',\n      },\n    })\n      .then(async response => {\n        const data = await response.json()\n        const files: any = Object.values(data.files)\n        setClip(JSON.parse(files[0].content))\n      })\n      .catch(console.error)\n  }, [gistId])\n\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n        <StyledContainer className=\"px-4\">\n          <Navbar.Brand>Holo CC</Navbar.Brand>\n        </StyledContainer>\n      </Navbar>\n\n      <div className=\"mt-5 pt-3 px-4\">\n        {clip && (\n          <Row>\n            <Col lg={8} className=\"mb-5\">\n              <MainPlayer url={clip.url} segments={clip.segments} captions={clip.captions} />\n            </Col>\n            <Col lg={4} className=\"mb-5\">\n              <Card>\n                <Card.Body>\n                  <Card.Title>Clip Information</Card.Title>\n                  <Card.Text>\n                    <div>\n                      <span>Author: </span>\n                      <span>{clip.author}</span>\n                      {clip.authorLink && (\n                        <a href={clip.authorLink} target=\"_blank\" rel=\"noreferrer\" className=\"ms-2\">\n                          {clip.authorLink}\n                        </a>\n                      )}\n                    </div>\n                    <div>\n                      <span>Source: </span>\n                      <span>\n                        <a href={clip.url} target=\"_blank\" rel=\"noreferrer\">\n                          {clip.url}\n                        </a>\n                      </span>\n                    </div>\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport { QueryParamProvider } from 'use-query-params'\nimport App from './App'\nimport './index.scss'\n\nconst rootElement = document.getElementById('root')\n\nReactDOM.render(\n  <StrictMode>\n    <Router>\n      <QueryParamProvider ReactRouterRoute={Route}>\n        <App />\n      </QueryParamProvider>\n    </Router>\n  </StrictMode>,\n  rootElement,\n)\n\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    const NextApp = require('./App').default\n    ReactDOM.render(<NextApp />, rootElement)\n  })\n}\n"],"sourceRoot":""}